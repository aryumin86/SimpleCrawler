// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TheCrawler.Lib.Db;

namespace TheCrawler.Lib.Migrations
{
    [DbContext(typeof(CollectionsContxext))]
    [Migration("20200709200510_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TheCrawler.Lib.Entities.CollectionSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("EnabledForCollecting")
                        .HasColumnType("boolean");

                    b.Property<string>("Host")
                        .HasColumnType("text");

                    b.Property<int>("PagesCollectedCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("WhenAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("WhenCollected")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("CollectionSource");
                });

            modelBuilder.Entity("TheCrawler.Lib.Entities.SourcePage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Html")
                        .HasColumnType("text");

                    b.Property<int>("SourceId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<DateTime>("WhenAdded")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("WhenCollected")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("SourcePages");
                });

            modelBuilder.Entity("TheCrawler.Lib.Entities.SourcePage", b =>
                {
                    b.HasOne("TheCrawler.Lib.Entities.CollectionSource", "CollectionSource")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
